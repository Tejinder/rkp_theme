{namespace jive.work}

/**
* Renders the content section for "all work" or "my work".
* @param? canonicalUrl the canonical url of this page
* @param? nextUrl the next paginated url for this page
* @param? previousUrl the previous paginated url of this page
* @param feedUrl The url of the resource that provides a feed representation of this view
* @param subNavLinks Links to display as subnavigation for the browse view.
* @param templateView The model to render the page template.
* @depends template=jive.guest.page.loginTip
*/
{template .main}
    {call jive.skin.template.main data="$templateView"}
          {param title}
              {i18nText('global.browse')} - {i18nText('browse.content.all.title')}
          {/param}
          {param canonicalUrl: $canonicalUrl/}
          {param nextUrl : $nextUrl/}
          {param previousUrl : $previousUrl/}
          {param headContent}
                <link class="js-content-feed-link" href="{$feedUrl}" rel="alternate" type="application/atom+xml"  />
				<link rel="stylesheet" href="/themes/rkp_theme/style/rkp.css" type="text/css" media="all" />
          {/param}
		  {param showNav: 'true'/}
          {param selectedLinkID: 'jive-nav-link-work'/}
          {param bodyClass: 'j-body-yourwork'/}
          {param bodyContent}
                {call jive.nav.browseSubNav}
                    {param links: $subNavLinks/}
        {param labelHtml: i18nText('browse.content.subnav.label') /}
                    {param selectedLinkID: 'jive-nav-link-work'/}
                {/call}

                <!-- BEGIN main body -->

                <header class="j-page-header"></header>
                {call .body data="all"/}
          {/param}
    {/call}
{/template}

/**
* Renders the content section for "all work" or "my work".
*
* @param browseViewID A unique name for this browse view.
* @param archetypeID The ID of the archetype associated with this browse view.
* @param itemsView An {@link ItemsViewBean} object which has associated items.
* @param filterGroup A {@link FilterGroupBean} object with nested filters.
* @param targetUserID The userID of the items being displayed.
* @param? targetUserName The target user's name.
* @param? viewingSelf Whether or not the current user is viewing their own information
* @param? guest Whether or not the current user is the guest user
* @param? layoutClass An optional class passed to the layout div element
* @param feedUrl The url of the resource that provides a feed representation of this view
* @param feedsEnabled
* @param urlParams map of query parameters for the last request
* @param urlPath path for the last request
* @param? accountCreationEnabled Whether or not account creation is enabled
* @param? validationEnabled Whether or not account validation is enabled
* @param? prop A map of additional properties
*
* @depends path=/resources/scripts/apps/browse/user/model/user_source.js
* @depends path=/resources/scripts/apps/browse/content/model/content_source.js
* @depends path=/resources/scripts/apps/filters/main.js
* @depends path=/resources/scripts/apps/filters/recommended_content.js
* @depends path=/resources/scripts/apps/filters/activity_time_pagination.js
* @depends path=/resources/scripts/apps/filters/following.js
* @depends path=/resources/scripts/apps/recommendation_app/models/recommendation_model.js
* @depends path=/resources/scripts/apps/browse/activity/info/main.js
* @depends path=/resources/scripts/apps/bookmark_app/main.js
* @depends path=/resources/scripts/apps/follows/main.js
*
* @depends template=jive.work.noResults
* @depends template=jive.browse.content.thumbnailPollItem
* @depends template=jive.browse.content.thumbnailDocumentItem
* @depends template=jive.browse.content.thumbnailDiscussionItem
* @depends template=jive.browse.content.thumbnailBlogPostItem
* @depends template=jive.browse.content.detailContentItem
*
* @allowDependsWildcard
*
* @depends template=jive.browse.content.*
*
*/
{template .body}

    {call jive.shared.soy.resourceInlineJs}
        {param code}
        $j(document).ready(
            function() {lb}
                var contentSource = new jive.Browse.Content.ItemSource();
                var filterApp = new (jive.oo.compose(
                    jive.Filters.Main,
                    jive.Filters.RecommendedContent,
                    jive.Filters.ActivityTimePagination,
                    jive.Filters.Following
                ))({lb}
                    itemSource: contentSource,
                    userPrefSource: new jive.Browse.User.ItemSource(),
                    guest: {$guest},
                    targetUserID: '{$targetUserID}',
                    browseViewID: '{$browseViewID |escapeJs}',
                    archetypeID: '{$archetypeID |escapeJs}',
                    filterGroup: {buildJson($filterGroup) |noAutoescape},
                    itemViewID: '{$itemsView.itemViewID |escapeJs}',
                    numResults: {length($itemsView.items) |escapeJs},
                    pageSize: {$itemsView.pageSize |escapeJs},
                    pageNumber: {$itemsView.pageNumber |escapeJs},
                    paginationStrategy: '{$itemsView.paginationStrategy |escapeJs}',
                    activityTime: {if ($itemsView.activityTime)}{$itemsView.activityTime |escapeJs}{else}0{/if},
                    token: '{$itemsView.token}',
                    recommenderType: 'content',
                    noResultTemplateConfig: {lb}
                        templateName: 'jive.work.noResults',
                        data: {lb}
                            filterIDs: {buildJson($filterGroup.appliedFilterIDs)|noAutoescape},
                            viewingSelf: {$viewingSelf},
                            targetUserName: '{if $targetUserName}{$targetUserName}{/if}'
                        {rb}
                    {rb}
                {rb});

                var jiveFollow = new jive.FollowApp.Main({lb}
                    i18n:null
                {rb});
                var bookmarkApp = new jive.BookmarkApp.Main({lb}createModalAction: '{buildUrl('create-favorite-popup!input.jspa')}'{rb});
            {rb});
      {/param}
          {/call}

        <!-- BEGIN main body -->
        <div class="j-layout j-layout-sl clearfix {if $layoutClass}{$layoutClass}{/if} j-rc5">
            <div class="j-colum-wrap-s">
                <div class="j-column j-column-s">
                    {call jive.browse.filter.filterGroup data="$filterGroup"}
                        {param urlPath: $urlPath /}
                    {/call}


                    {call .userBlogLink data="$prop"/}

                </div>
            </div>
            <div class="j-column-wrap-l">
                <div class="j-column j-column-l j-rc5">

                    <!-- Display guest tip if unauthenticated -->
                    {if ($guest)}
                        {call jive.guest.page.loginTip}
                            {param i18nKey}browse.guesttip.content{/param}
                            {param accountCreationEnabled: $accountCreationEnabled/}
                            {param validationEnabled: $validationEnabled/}
                        {/call}
                    {/if}

                        {call jive.browse.filter.filters data="$filterGroup"}
                            {param itemsView: $itemsView /}
                            {param urlParams: $urlParams /}
                            {param urlPath: $urlPath /}
                            {param hideFilterGroup: $filterGroup.defaultRecommended /}
                        {/call}

                    <div id="j-browse-item-grid" class="j-box-body" role="main" aria-label="{i18nText('browse.filter.grid')}">
                            {call jive.browse.grid.itemGrid data="$itemsView"}
                                {param browseViewID: $browseViewID/}
                                {param archetypeID: $archetypeID/}
                                {param noResultTemplateConfig: ['templateName': 'jive.work.noResults', 'data': ['filterIDs': $filterGroup.appliedFilterIDs, 'targetUserName': $targetUserName, 'viewingSelf' : $viewingSelf]]/}
                            {/call}
                        </div>

                        {call jive.browse.grid.moreSearchResultsAvailableHolder data="$itemsView"/}

                        <div class="j-browse-filter-row j-bottom-row j-rc4">
                            {call jive.shared.soy.paginationLinks}
                                {param current: $itemsView.pageNumber /}
                                {param max: $itemsView.pageNumber + ($itemsView.hasNext ? 1 : 0) /}
                                {param pageSize: $itemsView.pageSize /}
                                {param urlParams: $urlParams /}
                                {param urlPath: $urlPath /}
                            {/call}
                        </div>

                    <!-- BEGIN RSS Feed Link -->
                    {if $feedsEnabled}
                        <div id="j-friend-feed-link" class="j-friend-feed-link js-rss-link">
                            <a class="js-content-feed-link" href="{$feedUrl}" data-base-url="{buildUrl('view-browse-feed.jspa','browseSite', 'content', 'browseViewID', $browseViewID)}"><span class="jive-icon-glyph icon-feed"></span>{i18nText('browse.rss.feed')}</a>
                        </div>
                    {/if}
                    <!-- END RSS Feed Link -->
                </div>

                <div id="previewable-binary-viewer"></div>
            </div>
      </div>
{/template}

/**
* displays content if there are no item results
* @param? filterIDs the currently selected filterIDs
* @param? targetUserName The target user's name.
* @param? viewingSelf Whether or not the current user is viewing their own information
*/
{template .noResults}
    <div class="j-browse-info j-empty font-color-meta clearfix">
    {if $viewingSelf}
        {if $filterIDs and length($filterIDs) == 1}{/if}/*delete this if statement as it is only here so soy doesn't break because of unused params*/
     /*Uncomment the following if statements to allow for conditional no result displays by filter*/
        /*{if $filterIDs and length($filterIDs) == 1}
            {if $filterIDs[0] == 'all'}
                ALL VIEW - Nothing exists in the system
            {elseif $filterIDs[0] == 'following'}
                FOLLOWING VIEW - You aren't following anything.
            {elseif $filterIDs[0] == 'draft'}
                DRAFT VIEW - you don't have any drafts
            {elseif $filterIDs[0] == 'contentstatus[published,abuse-visible]'}
                AUTHOR VIEW - you haven't created any content.
            {elseif $filterIDs[0] == 'participated'}
                PARTICIPATED VIEW - you haven't participated in any content.
            {elseif $filterIDs[0] == 'historyarchetype[content]'}
                HISTORY VIEW - you haven't viewed any content.
            {else}
                DEFAULT VIEW - Fallback empty top level filter
            {/if}
        {else}*/
			<span class="j-arrow"></span>
			<span class="j-empty-doc"></span>
		    <h3 class="font-face-deco">{i18nText('browse.content.empty.header')}</h3>
		    <p>{i18nText('browse.content.empty.message')}</p>
        /*{/if}*/
    {elseif $targetUserName}
        {i18nText('profile.overview.nocontent.label', $targetUserName)}
    {/if}
    </div>
{/template}


/**
 * @param blogName the name of the blog
 * @param blogUrl the url to the blog
 * @param userName the blog owner's name (null if viewing your own blog)
 */
{template .userBlogLink}
    {if $blogName and $blogUrl}
        <div class="j-box j-box-placeblog">
            {if $userName}
                <header><h4>{i18nText('profile.blog.visit', $userName)}</h4></header>
            {else}
                <header><h4>{i18nText('blogs.crtpst.brdcrmb.your.text')}</h4></header>
            {/if}
            <div class="j-box-body">
                <p><a href="{buildUrl($blogUrl)}">{$blogName}</a></p>
            </div>
        </div>
    {/if}
{/template}

